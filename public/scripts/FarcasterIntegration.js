// public/scripts/FarcasterIntegration.js
// –ò—Å–ø–æ–ª—å–∑—É–µ–º ESM —á–µ—Ä–µ–∑ CDN, —á—Ç–æ–±—ã –Ω–µ –∂–¥–∞—Ç—å window.sdk
import { initMiniApp, sdk } from 'https://esm.sh/@farcaster/miniapp-sdk';

class FarcasterIntegration {
  constructor() {
    this.sdk = null;
  }

  async init() {
    try {
      console.log('üîÑ Initializing Farcaster MiniApp SDK...');
      await initMiniApp(); // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
      this.sdk = sdk;
      const inMini = await this.sdk.isInMiniApp();
      if (!inMini) {
        console.warn('‚ö†Ô∏è Not running in a Farcaster Mini App');
        return;
      }
      console.log('‚úÖ MiniApp environment confirmed');
      await this.sdk.actions.ready({ disableNativeGestures: false });
      console.log('üéâ Splash screen dismissed');
    } catch (err) {
      console.error('‚ùå Error initializing MiniApp SDK:', err);
    }
  }

  async sendDonation(amount = '1000000') {
    if (!this.sdk?.actions?.sendToken) {
      console.warn('üö´ sendToken unavailable');
      return { success: false, reason: 'sdk_unavailable' };
    }
    try {
      const result = await this.sdk.actions.sendToken({
        token: 'eip155:8453/erc20:0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913',
        amount,
        recipientAddress: '0x7Ea45b01EECaE066f37500c92B10421937571f75'
      });
      console.log(result.success ? '‚úÖ Donation sent' : '‚ö†Ô∏è Donation failed', result);
      return result;
    } catch (err) {
      console.error('‚ùå sendDonation error:', err);
      return { success: false, reason: 'send_failed', error: err.message };
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π scope
window.farcasterIntegration = new FarcasterIntegration();
console.log('FarcasterIntegration.js loaded');
